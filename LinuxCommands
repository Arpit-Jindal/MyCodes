cd - For changing directory.
ls - For listing files.
	 ls -a ==> for all files including hidden.
	 ls -R ==> for subdirectories as well.
	 ls -l ==> for showing permissions of files of directory.
rm - For removing files.
mv - For moving as well as removing files.
	 mv file1 file2 ==> renames file1 to file2
	 mv ./file1 /home/user/Desktop ==> For moving file from present directory to Desktop	
mkdir - Creating new directory.
rmdir - For removing directories.
cat - For creating text files.
	  cat > file_name ==> for creating file_name.txt
	  cat file_name ==> to open file_name
	  cat file1 file2 > file 3 ==> Creates file3 with file1 and file2 contents
	  cat file | grep string ==> higlights that portion with string


man - Stands for manual. eg. man mkdir
history - History of all the commands that you have entered in terminal.
pwd - Present working directory

finger - For details of logged in users.


top 
ps ux
ps <pid>
pidof <process> ==> eg : pidof vlc
kill <pid>
free ==> Shows ram usage. free -m ==>Shows in MBs | free -g ==>SHows in GBs
df ==> Drive Usage


----------------------------------------------------------------------------
Evrything in linux acts as files be it devices like printers, hdds, pendrive etc. Directories are also files. Linux is case sensitive. '.' means current directory and '..' means parent directory. Hidden files and directories starts with '.' period.
-----------------------------------------------------------------------------
Linux has two levels of authorization : PERMISSIONS and OWNERSHIP
OWNERSHIP - USER
			GROUP
			OTHERS (Users that are not in group)
PERMISSION - READ(r)
			 WRITE(w)
			 EXECUTE(e)
 We use ls -l to print all the permissions associated with files in that directory.
 Eg : d rwx rwx rwx
 	  -	--- --- ---
 	  0 123 456 789
 	  0==> 'd' if directory, '-' if file
 	  123==> for user
 	  456==> for group
 	  789==> for other
 	  r/w/x for read/write/execute, '-' for no permission
Command for changing permissions ==> chmod permissions file_name
We can change permissions using two different modes : ABSOLUTE MODE and SYMBOLIC MODE

ABSOLUTE MODE uses codes : 
Number	Permission Type			Symbol
0		No Permission			---
1		Execute					--x
2		Write					-w-
3		Execute + Write			-wx
4		Read					r--
5		Read + Execute			r-x
6		Read +Write				rw-
7		Read + Write +Execute	rwx
Eg chmod 764 file_name ==> sets permissions 7 for user, 6 for group, 4 for others.
Read = 4/ Write = 2/ Execute = 1


SYMBOLIC MODE can change individual permissions for owners.
Eg: chmod u=rwx file_name ==> changes user permission to read write and execute.
	chmod g+x file_name ==> adds executable permission to group.
	chmod o-w file_name ==> removes write permission from others.
To change the owner of a file we use command : chown user file_name ==> to change owner of a file.
											   chown root:root file_name ==> to change owner as well as group.
											   chgrp root file_name ==> to change group only.
											   NOTE :: Make sure we use this commands as super user, SUDO.
-----------------------------------------------------------------------------------------------------
To use terminal as root, type : sudo -i
-----------------------------------------------------------------------------------------------------
Output redirection : ls -l / > File ==> saves terminal output to File
					 echo Hello >> File ==> appends Hello to already existing File.
-----------------------------------------------------------------------------------------------------
vi text editor : Two modes, Command mode and insert mode. Insert mode by typing 'i'. Command mode by pressing ESC. Command mode is used for navigation and deletion.
-----------------------------------------------------------------------------------------------------
Virtual terminals are CLIs which execute the user commands
There are six virtual terminals which can be launched using the shortcut keys
They offer multi-user environment and up to six users can work on them at the same time
Unlike terminals you cannot use mouse with virtual terminals
To launch a virtual terminal press Ctrl+Alt+F(1 to 6) on the keyboard
Use the same command for navigating through the different terminals
To return to the home screen of the Linux system, use Ctrl+Alt+F7 and it would take to you the terminal
------------------------------------------------------------------------------------------------------

In linux systems, most powerful is root user. To use a terminal as root user we type 'su'. su has its own password. By default its password is not declared. We can set 'su' password by typing 'sudo passwd'. After this we can login as root in terminal by typing 'su' and entering root password.
Other users, if allowed, can use sudo command. We can execute any command from any other user login by typing sudo before the command. Then user can enter his password (not root password) and execute that command as SUPERUSER (having same priveleges as root). We can also login as root by using 'sudo su' from other logins with sudo power.
------------------------------------------------------------------------------------------------------
Managing Users and Groups

adduser <nameofuser> ==> to add new user.
deluser <nameofuser> ==> to delete user account only.
deluser --remove-all-files <username> ==> deletes everything ever owned by user. --remove-home also!


